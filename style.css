body, html {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  height: 100vh;
  overflow-y: auto;
  scroll-snap-type: y mandatory;
}


.hero-image {
  /* - HERO -
This code controls your "hero image." You will need to change hero.jpg to match your asset*/

background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("hero.jpg");
  height: 100%;
  background-attachment: relative;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}

/* Places text in the middle of the image */

.hero-text {
  text-align: center;
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 250%;


}

.hero-text h2 {   /* This section adds the text stylings for your hero block */
  display: block;
    font-size: 0.67em;
    margin-block-start: 2.33em;
    margin-block-end: 2.33em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: bold;
}

.hero-text h3 {   /* This section adds the text stylings for your hero block */
  display: block;
    font-size: 0.4em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: lighter;
    position: relative;
    top: 40%;
}


.slide  {
    height: 100vh;
    scroll-snap-align: start;
}


/* Preset Image Controls

This section of css. helps organize default images to position and center the image to scale nicely on all screens */

.center-image {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}


/* -Preset Photo Grid -

The following .css is responsible for your photo grid .row, .column, .column img and @ media all work together to create your responsive image displays. Change the images on index.html. Remember, the images need to be in your project file folder */

.row {
  display: flex;
  flex-wrap: wrap;
  padding: 0 4px;
    justify-content: center;
}

/* Create 3 equal columns that sit next to each other */
.column {
  flex: 25%;
  max-width: 25%;
  padding: 0 4px;
}

.column img {
  margin-top: 8px;
  vertical-align: middle;
  width: 100%;
}


/* Responsive layout - makes grid a one column-layout instead of two or three columns */
@media screen and (max-width: 800px) {
  .column {
    flex: 50%;
    max-width: 50%;
}
}


/* - Preset Text Block Controls-
this css. element centers text elements*/


/* This css. section controls the paragraph chunks*/

@media screen and (min-width: 800px) {
.textblock {
  margin: auto;
  width: 50%;
  padding: 100px;
    font-size: 125%;
}
}

@media screen and (max-width: 800px) {
  .textblock {
    margin: auto;
    padding: 20px;
}
}
